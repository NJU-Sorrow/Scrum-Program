<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd ">
	<!-- 配置shiro的核心securityMessage -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- cache缓存 -->
		<property name="cacheManager" ref="cacheManager" />
		<!-- Single realm app. If you have multiple realms, use the 'realms' property 
			instead. -->
		<!-- realm :域 -->
		<property name="realm" ref="userRealm"></property>
		<!-- By default the servlet container sessions will be used. Uncomment 
			this line to use shiro's native sessions (see the JavaDoc for more): -->
		<!-- <property name="sessionMode" value="native"/> -->
	</bean>
	<!-- 配置shiro的生命周期，这样在ioc容器中，springMVC方便管理 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 配置shiro的过滤器 ：请求路径的拦截 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!--shiro整个的处理，都由securityManger指定和决定 -->
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl==>如果登录成功，跳转到哪个页面，或者执行哪个请求 -->
		<property name="loginUrl" value="/login.jsp" />
		<!-- 验证通过执行的请求或者跳转 -->
		<property name="successUrl" value="/frame/frameSet.jsp" />
		<!-- 验证不通过执行的请求或者跳转 -->
		<property name="unauthorizedUrl" value="/index.jsp" />
	
		<!-- 具体的拦截路径和拦截的方式和角色和权限的范围 -->
		<property name="filterChainDefinitions">
			<value>
				/login.jsp=anon
				/Userlogin/login=anon
				/img/**=anon
				/css/Login.css=anon
				/Userlogin/identity=anon
				/Userlogin/logout=logout
				/**=authc
			</value>
		</property>
		<property name="filters">
			<map>
				<entry key="logout" value-ref="logout" />
				<entry key="authc" value-ref="loginFormAuthenticationFilter" />
			</map>
		</property>
	</bean>
	<!-- 配置 -->
	<bean id="loginFormAuthenticationFilter"
		class="com.scrum.Library.shiroFilter.loginFormAuthenticationFilter" >
	
		</bean>
	<!-- 自定义logout的路径 -->
	<!-- 自定义退出路径 -->
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/Userlogin/index" />
	</bean>
	<!-- 自定义的realm -->
	<bean id="userRealm" class="com.scrum.Library.realm.UserRealm"></bean>
	<!-- 配置shiro的缓存 ：CacheManager -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- Set a net.sf.ehcache.CacheManager instance here if you already have 
			one. If not, a new one will be creaed with a default config: <property name="cacheManager" 
			ref="ehCacheManager"/> -->
		<!-- If you don't have a pre-built net.sf.ehcache.CacheManager instance 
			to inject, but you want a specific Ehcache configuration to be used, specify 
			that here. If you don't, a default will be used.: -->
		<property name="cacheManagerConfigFile" value="classpath:cacheConfig/ehcache.xml" />
	</bean>


</beans>